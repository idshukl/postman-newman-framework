{
	"info": {
		"_postman_id": "0fa3da94-5ae5-4da1-80c8-b081bbb1a6b1",
		"name": "sample-collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28167956"
	},
	"item": [
		{
			"name": "getJobs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is within an acceptable range\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array').that.is.not.empty;\r",
							"    \r",
							"    const requiredFields = [\r",
							"        \"id\", \"company_name\", \"job_title\", \"experience\", \"country_id\",\r",
							"        \"city_id\", \"job_type\", \"apply_link\", \"status\", \"created_at\", \"job_posted_date\"\r",
							"    ];\r",
							"    \r",
							"    responseData.forEach(function(job) {\r",
							"        requiredFields.forEach(function(field) {\r",
							"            pm.expect(job).to.have.property(field);\r",
							"        });\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"ID is a non-empty string\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  responseData.forEach(function(job) {\r",
							"    pm.expect(job.id).to.be.a('string').and.to.have.lengthOf.at.least(1);\r",
							"  });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Job posted date is in a valid date format\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  responseData.forEach(function(job) {\r",
							"    pm.expect(job.job_posted_date).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);\r",
							"  });\r",
							"});\r",
							"\r",
							"pm.test(\"Response Content-Type is application/json\", function () {\r",
							"  pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"// Verify all keys and values in the response\r",
							"pm.test(\"All keys and values in the response are valid\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    responseData.forEach(function(job) {\r",
							"        // Check all keys are present\r",
							"        pm.expect(Object.keys(job)).to.eql([\r",
							"            \"id\", \"company_name\", \"job_title\", \"experience\", \"country_id\",\r",
							"            \"city_id\", \"job_type\", \"apply_link\", \"status\", \"created_at\", \"job_posted_date\"\r",
							"        ]);\r",
							"\r",
							"        // Check all values are not null or undefined\r",
							"        Object.values(job).forEach(function(value) {\r",
							"            pm.expect(value).to.not.be.null;\r",
							"            pm.expect(value).to.not.be.undefined;\r",
							"        });\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{hostname}}/wp-json/mo/v1/jobs",
					"protocol": "https",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"wp-json",
						"mo",
						"v1",
						"jobs"
					]
				}
			},
			"response": []
		},
		{
			"name": "postJobs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.property('code');\r",
							"    pm.expect(responseData).to.have.property('message');\r",
							"    pm.expect(responseData).to.have.property('data');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Data object contains expected keys\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData.data).to.be.an('object');\r",
							"    pm.expect(responseData.data).to.include.all.keys('status');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://{{hostname}}/wp-json/mo/v1/jobs",
					"protocol": "https",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"wp-json",
						"mo",
						"v1",
						"jobs"
					]
				}
			},
			"response": []
		}
	]
}